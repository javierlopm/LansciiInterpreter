Javier Lopez     11-10552
Patricia Reinoso 11-10851


Uso
===

Para correr el proyecto (Lexer y parser) es necesario "compilar" el archivo 
de gramaticá parse/grammar.rb, esto puede realizarse en la carpeta principal
con el comando rake compile_grammar, esta accion tambien puede realizarse 
mediante el comando 'racc ./parser/grammar.rb -oparser/racc.rb'

Luego de compilar, la ejecución se hará mediante ./lanscii [archivo a analizar] 
esto reportará posibles errores de lexing encontrados, si no se encuentra 
ninguno, los tokens hallados serán parseados en un árbol sintactico e impreso
en pantalla de acuerdo al formato indicado. Si un error de sintaxis es contrado
se reportará y terminará la ejecución.

Con el comando rake run, se compilará la gramática y se ejecutará el parser
reconociendo el archivo parser/example1.lc

El comando rake suite ejecutará todos los ejemplos correctos de la carpeta 
parser/examples y colocara su salida en /salida.txt

El comando rake runBadGrammar mostrará el error del ejemplo 
parser/example/example8.lc



Decisiones de implementación
============================

Luego de realizar el diseño de gramática e implementarlo, nos encontramos con 
una gran cantidad de shift/reduce y algunos reduce/reduce conflicts, luego de
agregar precedencias y sentido de las asociatividades en las expresiones, estos 
errores disminuyeron. Pero fue necesario agregar reglas de precedencia a la 
concatenación de instrucciones y a la declaración de vairiables.

Por último, para eliminar los ultimos shift/reduce conflicts encontrados
se tuvo que reestructurar la regla "declare", inicialmente teníamos una regla
declare -> "declare declare", pero fue modificada hasta la forma actual, la cual
construye las diferentes declaraciones de variables mediante recursión izquierda.

Estado actual del proyecto
==========================

Para esta nueva entrega se resolvieron los problemas de especificación como se 
nos recomendó. Adicionalmentes e realizó la construcción de un arból sintáctico,
en donde realizamos un pequeño bocetos en los nodos de los tipos que pueden
recibir algunas expresiones, pero sin realizar las verificaciones pertinentes
de la siguiente entrega, en la construcción tampoco se crean estructuras 
relacionadas a la declaración de variables, ya que la tabla de símbolos no
ha sido planteada todavía.

Comentarios
===========

En la carpeta parser/examples se encuentran alguno ejemplos de programas.
* example1.lc ejemplo del enunciado de la entrega 2
* example2.lc programa ejemplo de la especificación del lenguaje
* example3.lc ejempl de read, concatenación y ciclo determinado
* example4.lc ejemplo de ciclo determinado sin variable con un ciclo 
              indeterminado anidado
* example5.lc ejemplo de los dos tipos de if anidados
* example6.lc muestra la construccion de un árbol con expresiones aritméticas
* example7.lc muestra un arbol de expresión correcto respecto a la gramática
              pero equivocado respecto a la compatibilidad de tipos a analizar
              en las próximas entregas
* example8.lc Ejemplo con dos errores de gramática, el programa muestra el 
              primer error.